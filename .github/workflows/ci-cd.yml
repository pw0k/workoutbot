name: Java CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      WORKOUT_DATASOURCE_URL: jdbc:postgresql://localhost:5432/workoutdb
      WORKOUT_DB_USER: dummy
      WORKOUT_DB_PASSWORD: dummy
      TELEGRAM_TOKEN: TELEGRAM_TOKEN
      TELEGRAM_TEST_CHAT: TELEGRAM_TEST_CHAT
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Print environment variables
        run: env

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'gradle'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build Docker Image
        run: ./gradlew bootBuildImage

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: docker push pw0k/workoutbot:latest

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            mkdir -p /opt/workoutbot
            cd /opt/workoutbot
            
            # Create .env file from GitHub Secrets
            echo "WORKOUT_DATASOURCE_URL=${{ secrets.WORKOUT_DATASOURCE_URL }}" >> .env
            echo "WORKOUT_DB_USER=${{ secrets.WORKOUT_DB_USER }}" >> .env
            echo "WORKOUT_DB_PASSWORD=${{ secrets.WORKOUT_DB_PASSWORD }}" >> .env
            echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}" >> .env
            echo "TELEGRAM_TEST_CHAT=${{ secrets.TELEGRAM_TEST_CHAT }}" >> .env
            
            curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -O https://github.com/pw0k/workoutbot/blob/main/docker-compose.yml
            
            docker pull workoutbot:latest
            docker-compose up -d
        env:
          DEBUG: true